"""
Создайте модуль и напишите в нём функцию, которая получает на вход дату в формате DD.MM.YYYY
Функция возвращает истину, если дата может существовать или ложь, если такая дата невозможна.
Для простоты договоримся, что год может быть в диапазоне [1, 9999].
Весь период (1 января 1 года - 31 декабря 9999 года) действует Григорианский календарь.
Проверку года на високосность вынести в отдельную защищённую функцию.
В модуль с проверкой даты добавьте возможность запуска в терминале с передачей даты на проверку.
"""

import argparse

# !!! Для запуска кода надо в командной строке прописать python task1.py "01.02.2018" (или любую другую дату) !!!

def _is_leap_year(year: int) -> bool:
    """
    Проверяет, является ли год високосным.
    """
    if year % 400 == 0 or (year % 4 == 0 and year % 100 != 0):
        return True
    return False


def is_valid_date(day: int, month: int, year: int) -> bool:
    """
    Проверяет, существует ли указанная дата.
    """
    # Проверка диапазона года
    if not (1 <= year <= 9999):
        print("Год должен быть в диапазоне от 1 до 9999.")
        return False

    # Проверка диапазона месяца
    if not (1 <= month <= 12):
        print(f"Неверное значение месяца {month}.")
        return False

    # Проверка диапазона дня
    days_in_month = {
        1: 31,
        2: 29 if _is_leap_year(year) else 28,
        3: 31,
        4: 30,
        5: 31,
        6: 30,
        7: 31,
        8: 31,
        9: 30,
        10: 31,
        11: 30,
        12: 31
    }

    max_days = days_in_month.get(month)
    if not (1 <= day <= max_days):
        print(f"{day} день не возможен в месяце {month}.")
        return False

    return True


if __name__ == "__main__":
    # Модуль принимающий код из командной строки
    parser = argparse.ArgumentParser()
    parser.add_argument('date', type=str, help='Дата в формате DD.MM.YYYY')
    args = parser.parse_args()
    print(args)

    try:
        # Проверка на корректность даты
        date_parts = args.date.split('.')
        print(date_parts)
        day = int(date_parts[0])
        month = int(date_parts[1])
        year = int(date_parts[2])

        if is_valid_date(day, month, year):
            print("Дата верная.")
        else:
            print("Дата неверная.")
    except ValueError as e:
        print(f"Произошла ошибка при разборе даты: {e}")
    except Exception as e:
        print(f"Дата невалидная: {e}")

